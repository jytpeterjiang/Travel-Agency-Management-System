@startuml Travel Agency Management System

' Interfaces
interface Bookable {
  +calculatePrice(): double
  +checkAvailability(): boolean
  +makeReservation(): boolean
}

interface Reviewable {
  +addReview(Review): void
  +getAverageRating(): double
  +getReviews(): ArrayList<Review>
}

' Abstract classes
abstract class TravelService {
  #serviceId: String
  #name: String
  #description: String
  #basePrice: double
  +TravelService(params)
  +{abstract} calculateTotalPrice(): double
}

' Concrete classes
class TravelPackage {
  -destination: String
  -duration: int
  -accommodation: String
  -activities: ArrayList<Activity>
  -reviews: ArrayList<Review>
  +TravelPackage(params)
  +calculateTotalPrice(): double
  +getItinerary(): Itinerary
}

class CustomTrip {
  -customer: Customer
  -destinations: ArrayList<String>
  -services: ArrayList<TravelService>
  +CustomTrip(params)
  +calculateTotalPrice(): double
  +addService(TravelService): void
}

class Activity {
  -activityId: String
  -location: String
  -duration: int
  -cost: double
  +Activity(params)
  +getCost(): double
}

class Customer {
  -customerId: String
  -name: String
  -email: String
  -phone: String
  -bookings: ArrayList<Booking>
  +Customer(params)
  +addBooking(Booking): void
  +getBookingHistory(): ArrayList<Booking>
}

class Booking {
  -bookingId: String
  -customer: Customer
  -service: TravelService
  -date: Date
  -status: BookingStatus
  -payment: Payment
  +Booking(params)
  +calculateTotal(): double
  +updateStatus(BookingStatus): void
}

class Review {
  -reviewId: String
  -customer: Customer
  -rating: int
  -comment: String
  -date: Date
  +Review(params)
  +getRating(): int
  +getComment(): String
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELED
}

class Payment {
  -paymentId: String
  -amount: double
  -method: PaymentMethod
  -status: PaymentStatus
  +Payment(params)
  +processPayment(): boolean
}

class Itinerary {
  -itineraryId: String
  -days: ArrayList<ItineraryDay>
  +Itinerary(params)
  +addDay(ItineraryDay): void
  +getTotalDuration(): int
}

class ItineraryDay {
  -dayNumber: int
  -activities: ArrayList<Activity>
  -notes: String
  +ItineraryDay(params)
  +addActivity(Activity): void
}

' Relationships
TravelService <|-- TravelPackage
TravelService <|-- CustomTrip
Bookable <|.. TravelPackage
Bookable <|.. CustomTrip
Reviewable <|.. TravelPackage

Customer "1" -- "many" Booking
TravelService "1" -- "many" Booking
Booking "1" -- "1" Payment
TravelPackage "1" -- "many" Activity
TravelPackage "1" -- "1" Itinerary
Itinerary "1" -- "many" ItineraryDay
ItineraryDay "1" -- "many" Activity
Customer "1" -- "many" Review
TravelPackage "1" -- "many" Review

@enduml
