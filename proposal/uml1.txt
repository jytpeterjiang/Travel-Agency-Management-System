@startuml
package "tams.model" {
    abstract class TravelService {
        -name: String
        -description: String
        -basePrice: double
        #abstract calculateTotalPrice(): double
        +getName(): String
        +getDescription(): String
        +getBasePrice(): double
    }
    
    class TravelPackage {
        -destination: String
        -duration: int
        -maxCapacity: int
        -currentBookings: int
        -activities: List<Activity>
        -itinerary: Itinerary
        -reviews: List<Review>
        +calculateTotalPrice(): double
        +checkAvailability(): boolean
        +makeReservation(): boolean
        +addReview(Review): void
        +getAverageRating(): double
        +getReviews(): List<Review>
    }
    
    class CustomTrip {
        -customer: Customer
        -customServices: List<Activity>
        -itinerary: Itinerary
        -startDate: LocalDate
        -endDate: LocalDate
        +calculateTotalPrice(): double
        +addService(Activity): void
        +addServices(List<Activity>): void
        +removeService(Activity): void
    }
    
    class Customer {
        -id: String
        -name: String
        -email: String
        -phone: String
        -address: String
        -preferences: String
        -bookingHistory: List<Booking>
        +addBooking(Booking): void
    }
    
    class Booking {
        -id: String
        -customer: Customer
        -travelPackage: TravelPackage
        -bookingDate: LocalDate
        -travelDate: LocalDate
        -passengers: int
        -totalAmount: double
        -status: BookingStatus
        -payment: Payment
        +calculateTotal(): double
        +confirmBooking(): void
        +cancelBooking(): void
    }
    
    class Payment {
        -id: String
        -booking: Booking
        -amount: double
        -method: PaymentMethod
        -date: LocalDate
        -status: PaymentStatus
        +processPayment(): boolean
        +refundPayment(): boolean
    }
    
    class Itinerary {
        -id: String
        -days: List<ItineraryDay>
        +addDay(ItineraryDay): void
        +removeDay(ItineraryDay): void
        +getDuration(): int
    }
    
    class ItineraryDay {
        -dayNumber: int
        -description: String
        -activities: List<Activity>
        -meals: String
        -accommodation: String
        +addActivity(Activity): void
        +removeActivity(Activity): void
    }
    
    class Activity {
        -id: String
        -name: String
        -description: String
        -duration: int
        -cost: double
        -location: String
        +getCost(): double
    }
    
    class Review {
        -id: String
        -customer: Customer
        -rating: int
        -comment: String
        -date: LocalDate
        +getRating(): int
    }
    
    enum BookingStatus {
        PENDING
        CONFIRMED
        CANCELLED
        COMPLETED
    }
    
    enum PaymentMethod {
        CREDIT_CARD
        BANK_TRANSFER
        PAYPAL
        CASH
    }
    
    enum PaymentStatus {
        PENDING
        COMPLETED
        FAILED
        REFUNDED
    }
    
    interface Bookable {
        +calculatePrice(): double
        +checkAvailability(): boolean
        +makeReservation(): boolean
    }
    
    interface Reviewable {
        +addReview(Review): void
        +getAverageRating(): double
        +getReviews(): List<Review>
    }
    
    TravelService <|-- TravelPackage
    TravelService <|-- CustomTrip
    TravelPackage ..|> Bookable
    TravelPackage ..|> Reviewable
    TravelPackage "1" *-- "1" Itinerary
    TravelPackage "1" *-- "*" Activity
    CustomTrip "1" *-- "1" Itinerary
    CustomTrip "1" *-- "*" Activity
    Itinerary "1" *-- "*" ItineraryDay
    ItineraryDay "1" *-- "*" Activity
    Booking "1" *-- "1" Payment
    Booking "*" -- "1" Customer
    Booking "*" -- "1" TravelPackage
    Review "*" -- "1" Customer
}
@enduml
